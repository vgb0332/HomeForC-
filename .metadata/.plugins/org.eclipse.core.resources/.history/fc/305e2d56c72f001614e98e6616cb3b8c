//
// Programmed by cskim HUFS.ac.kr 2008/5/6
//
#ifndef MY_FIVECARDS_H
#define MY_FIVECARDS_H
#include <cassert>
#include "Card.h"

const int FIVE = 5;
//포커 순 추가
/* 노페어: 0
 * 원페어: 1
 * 투페어: 2
 * 트리플: 3
 * 스트레이트: 4
 * 백스트레이트: 5
 * 마운틴: 6
 * 플러쉬: 7
 * 풀하우스: 8
 * 포카드: 9
 * 스트레이트 플러쉬: 10
 * 백스트레이트 플러쉬: 11
 * 로얄스트레이트 플러쉬: 12
 */
enum ORDER {NOPAIR = 0,ONEPAIR,TWOPAIR,TRIPLE,STRAIGHT,BSTRAIGHT,MOUNTAIN,FLUSH,FULLHOUSE,FOURCARD,STFLUSH,BSTFLUSH,ROYALSTFLUSH};

class FiveCards {
public:
	FiveCards();
	FiveCards(const FiveCards& r);
	FiveCards& operator=(const FiveCards& r);
	Card& operator[](int i);
	Card operator[](int i) const;
	~FiveCards();
	int compare(const FiveCards& right) const;
	int compareOrder(const FiveCards& right) const;
	string tostring() const;

	static FiveCards& getHighValue();
private:
	Card* pelem;
	ORDER order;

};
bool operator<(const FiveCards& left, const FiveCards& right);
bool operator>(const FiveCards& left, const FiveCards& right);
bool operator==(const FiveCards& left, const FiveCards& right);
ostream& operator<<(ostream& out, const FiveCards& value);

#endif
